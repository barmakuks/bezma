package com.fairbg.bezma.unit_tests;

public class TestData_DifferentDirections
{
    public static short[][] dataRedCCW = { // 
        // First game [W:0 B:0]
        { 0, 2, 0, 0, 0, 0,-5, 0,-3, 0, 0, 0, 5,-5, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0,-2, 0, 0, 0, 0 }, // Start position
        
        { 0, 2, 0, 0, 0, -2,-4, 0,-2, 0, 0, 0, 5,-5, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0,-2, 0, 0, 0, 0 }, // B: 13: 8/5  6/5 
        { 0, 2, 0, 0, 0, -2,-4, 0,-2, 0, 0, 0, 5,-5, 0, 0, 0, 2, 1, 4, 0, 1, 0, 0,-2, 0, 0, 0, 0 }, // W: 12: 8/7 6/4
        { 0, 2, 0, 0, 0, -2,-4, 0,-2, 0, 0, 0, 5,-5, 0, 0, 0, 2, 1, 4, 0, 1, 0, 0,-2, 0, 0, 0,-1 }, // B: double
        { 0, 2, 0, 0, 0, -2,-4, 0,-2, 0, 0, 0, 5,-5, 0, 0, 0, 2, 1, 4, 0, 1, 0, 0,-2, 0, 0, 0, 0 }, // W: pass

        // Second game [W:0 B:1]
        { 0, 2, 0, 0, 0, 0,-5, 0,-3, 0, 0, 0, 5,-5, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0,-2, 0, 0, 0, 0 }, // Start position

        { 0, 2, 0, 0, 0, 0,-5, 0,-3, 0, 0, 0, 5,-5, 0, 0, 0, 2, 0, 4, 2, 0, 0, 0,-2, 0, 0, 0, 0 }, // W:
        { 0, 2, 0, 0, 0, 0,-5,-2,-2, 0, 0, 0, 5,-4, 0, 0, 0, 2, 0, 4, 2, 0, 0, 0,-2, 0, 0, 0, 0 }, // B:
        { 0, 2, 0, 0, 0, 0,-5,-2,-2, 0, 0, 0, 5,-4, 0, 0, 0, 1, 0, 3, 2, 2, 0, 0,-2, 0, 0, 0, 0 }, // W:
        { 0, 2, 0, 0, 0, 0,-5,-2,-2,-2, 0, 0, 5,-2, 0, 0, 0, 1, 0, 3, 2, 2, 0, 0,-2, 0, 0, 0, 0 }, // B:
        { 0, 2, 0, 0, 0, 0,-5,-2,-2,-2, 0, 0, 5,-2, 0, 0, 0, 1, 0, 3, 2, 2, 0, 0,-2, 0, 0, 0,-1 }, // W: double
        { 0, 2, 0, 0, 0, 0,-5,-2,-2,-2, 0, 0, 5,-2, 0, 0, 0, 1, 0, 3, 2, 2, 0, 0,-2, 0, 0, 0, 0 }, // B: pass
        
        // Third game [W:1 B:1]
        { 0, 2, 0, 0, 0, 0,-5, 0,-3, 0, 0, 0, 5,-5, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0,-2, 0, 0, 0, 0 }, // start position

    };

    public static short[][] dataRedCW = { // 
        { 0, 5, 0, 0, 0, -3, 0, -5, 0, 0, 0, 0, 2, -2, 0, 0, 0, 0, 5, 0, 3, 0, 0, 0, -5, 0, 0, 0 }, // Start position
        
        { 0, 5, 0, 0, 0, -3, 0, -5, 0, 0, 0, 0, 2,  0,-1,-1, 0, 0, 5, 0, 3, 0, 0, 0, -5, 0, 0, 0 }, // B: 12: 24/23 24/22  Red move
        { 0, 5, 0, 0, 0, -3, 0, -5, 0, 0, 0, 0, 2,  0,-1,-1, 0, 2, 4, 0, 2, 0, 0, 0, -5, 0, 0, 0 }, // W: 13: 24/23 24/22  Black move
        { 0, 5, 0, 0, 0, -3, 0, -5, 0, 0, 0, 0, 2,  0,-1,-1, 0, 2, 4, 0, 2, 0, 0, 0, -5, 0, 0,-1 }, // B: double 
        { 0, 5, 0, 0, 0, -3, 0, -5, 0, 0, 0, 0, 2,  0,-1,-1, 0, 2, 4, 0, 2, 0, 0, 0, -5, 0, 0, 0 }, // W: pass 
        
    };
    
    public static short[][] dataGrayCCW = {
        { 0, -2, 0, 0, 0, 0, 5, 0, 3, 0, 0, 0, -5, 5, 0, 0, 0, -3, 0, -5, 0, 0, 0, 0, 2, 0, 0, 0 },
        { 0,  0,-1,-1, 0, 0, 5, 0, 3, 0, 0, 0, -5, 5, 0, 0, 0, -3, 0, -5, 0, 0, 0, 0, 2, 0, 0, 0 }, // W: 12: 24/23 24/22  Red move
        { 0,  0,-1,-1, 0, 0, 5, 0, 3, 0, 0, 0, -5, 5, 0, 0, 0, -3, 0, -5, 0, 0, 0, 0, 2, 0, 0,-1 }, // B: double           Black
        { 0,  0,-1,-1, 0, 0, 5, 0, 3, 0, 0, 0, -5, 5, 0, 0, 0, -3, 0, -5, 0, 0, 0, 0, 2, 0, 0, 0 }, // W: pass             Red 
        
    };
    
    public static short[][] dataGrayCW = {
        { 0, -5, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0, -2, 2, 0, 0, 0, 0, -5, 0, -3, 0, 0, 0, 5, 0, 0, 0 }, //  Start position
        
        { 0, -5, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0, -2, 0, 1, 1, 0, 0, -5, 0, -3, 0, 0, 0, 5, 0, 0, 0 }, //  W: 12: 24/23 24/22
        { 0, -5, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0, -2, 0, 1, 1, 0,-2, -4, 0, -2, 0, 0, 0, 5, 0, 0, 0 }, //  B: 13: 8/5 6/5
        { 0, -5, 0, 0, 0, 2, 0, 4, 1, 1, 0, 0, -2, 0, 1, 1, 0,-2, -4, 0, -2, 0, 0, 0, 5, 0, 0, 0 }, //  W: 23: 8/5 6/4
        { 0, -5, 0, 0, 0, 2, 0, 4, 1, 1,-1,-1,  0, 0, 1, 1, 0,-2, -4, 0, -2, 0, 0, 0, 5, 0, 0, 0 }, //  B: 12: 24/23 23/22
        { 0, -5, 0, 0, 0, 2, 0, 4, 1, 1,-1,-1,  0, 0, 1, 1, 0,-2, -4, 0, -2, 0, 0, 0, 5, 0, 0,-1 }, //  W: double
        { 0, -5, 0, 0, 0, 2, 0, 4, 1, 1,-1,-1,  0, 0, 1, 1, 0,-2, -4, 0, -2, 0, 0, 0, 5, 0, 0, 0 }, //  B: pass
    };
    
}
